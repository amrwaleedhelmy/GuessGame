//Amr Osman (A00112)
package application;

import java.util.Random;

import javafx.application.Application;
import javafx.application.Platform;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.stage.Stage;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.Menu;
import javafx.scene.control.MenuBar;
import javafx.scene.control.MenuItem;
import javafx.scene.control.RadioButton;
import javafx.scene.control.RadioMenuItem;
import javafx.scene.layout.GridPane;
import javafx.scene.control.Button;
import javafx.scene.control.CheckMenuItem;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.control.ToggleGroup;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.Text;


public class Main extends Application {
	//integers used in the "Guess the number" game
	int counter = 0; //the counter will store the number of incorrect attempts done by the user 
	int rightAns = (int)(Math.random()*101); //the value of the integer generated by the program
	//integers used in the "Math Quiz" game
	//In this game, the equation used is in the form of ax=b, where a and x are randomly generated by the program, and b is a multiple of x
	//the user will have values a and b given and he/she has to find out the value of number (x)
	int a = (int)(Math.random()*11); //code that randomly generates the value a
	int x = (int)(Math.random()*11); //code that randomly generates the value x
	int b = a * x; //here, we are setting the value "b" to be a multiple of a and x
	
	//The code in the next 3 lines display random numbers generated by the program for the three incorrect answers
	int ans1 = (int)(Math.random()*11);
	int ans2 = (int)(Math.random()*11);
	int ans3 = (int)(Math.random()*11);
	
	//the following code generates an integer between 11 and 100 (inclusive) [if the player decides to choose advanced mode]
	Random r = new Random();
	int less = 11;
	int great = 100;
	
	@Override
	public void start(Stage primaryStage) {
		try {
			//the following code creates a menu for the game, this menu has the options to choose whether to play the "Guess the number" game or the "Math Quiz" game
			
			//Creating a menu
			Menu gameMenu = new Menu("Select the game");
			//Creating menu items for the menu
			RadioMenuItem sub1 = new RadioMenuItem("Guess the number");
			RadioMenuItem sub2 = new RadioMenuItem("Math quiz game");
			//Adding all the menu items to the menu
			gameMenu.getItems().addAll(sub1, sub2);
			//Creating a menu bar and adding menu to it
			MenuBar menuBar = new MenuBar(gameMenu);

			//Adding Assignment 2 code
			GridPane grid = new GridPane(); //we are creating a "container" in root, which will organize the scene contents

			Text instructions = new Text("Enter a number between 0 and 100 (inclusive), if the number entered is incorrect, you will be prompted to enter a number continuously until you guess the right number.");
			//the previous line is a code which creates a new object of class "Text", which has the instructions of how to play the game 
			grid.add(instructions, 0, 0); //code to locate the game instructions on the top of the window

			TextField userTextField = new TextField(); //create a new text field where the user will enter inside it the guessed integer
			grid.add(userTextField, 0, 1);
			userTextField.setPromptText("Guess the number!"); //text displayed on the text field, which asks the user to write the number in this field

			Text text = new Text();
			Text text1 = new Text();
			Button btn2 = new Button("Guess"); 
			grid.add(btn2, 0, 2);
			grid.add(text, 0, 3);
			grid.add(text1, 0, 4);

			Text response = new Text();
			Button btn3 = new Button("I give up"); 
			grid.add(btn3, 0, 5);
			grid.add(response, 0, 6);

			//Code to create the Popup window
			Label label1= new Label("Do you want to continue playing?");
			Button button1= new Button("Exit the game");
			Button button2= new Button("Continue the game");

			VBox layout= new VBox(10);  
			layout.getChildren().addAll(label1, button1, button2); //we are adding label1, button1, and button2 to VBox

			Scene scene1= new Scene(layout, 200, 200);
			Stage popup = new Stage(); 
			popup.setScene(scene1);
			popup.setTitle("End of game");

			button1.setOnAction(e -> Platform.exit());
			button2.setOnAction(e -> {
				rightAns = (int)(Math.random()*101);
				userTextField.clear();
				text.setText(null);
				text1.setText(null);
				response.setText(null);
				popup.close();
			});

			/* code for a button where the user clicks on it to submit the number he/she guessed and 
			then receive a message telling whether the number guessed is either greater than, less than, or the same as the actual number */
			btn2.setOnAction(e -> {
				int guessNum = Integer.valueOf(userTextField.getText());
				if (guessNum < rightAns) {
					text.setText("The number you have guessed is lesser than the actual number, think of a larger number.");
					counter++;
					text1.setText("You made " + counter + " wrong attempts.");

				} else if (guessNum > rightAns) {
					text.setText("The number you have guessed is greater than the actual number, think of a smaller number.");
					counter++;
					text1.setText("You made " + counter + " wrong attempts.");
				} else {
					text.setText("Congratualations! You guessed right!");
					popup.show();
				}
			});				

			//After the user clicks on this button, the right answer will be displayed
			btn3.setOnAction(e -> {
				response.setText("Unlucky, the number is " + rightAns + ".");
				popup.show();
			});	

			Scene firstGame = new Scene(grid, 900, 200);
			Stage game1 = new Stage();
			game1.setTitle("Game Over!");
			game1.setScene(firstGame);

			//Adding Assignment 3 code
			
			/* In the following lines, we are creating a new menu named "Options", where the user will have three menu items to choose, the first menu item is to 
			 start a new game, the second is to select "advanced mode" for solving math equations with numbers greater than 10, and the third menu item is to 
			 exit the game, and if the user clicks "exit", the window will close */
			Menu options = new Menu("Options"); //creating a menu named "options"
			MenuItem newGame = new MenuItem("New Game"); //creating a menu item which starts a new game
			CheckMenuItem advanced = new CheckMenuItem("Advanced"); 
			//creating a check menu item for advanced, where it will be ticked if the user selects it, and will be unticked if the user doesn't want to solve math equations which have numbers greater than 10
			MenuItem exit = new MenuItem("Exit"); //creating the menu item "exit"
			options.getItems().addAll(newGame, advanced, exit); //adding the 3 menu items to the menu named "options"

			//similar to the previous lines, we are creating a code which creates a new menu called "view"
			Menu view = new Menu("View"); 
			Menu font = new Menu("Font size"); //creating a new menu inside the "View" menu where the user will choose whether he/she wants the text displayed in the game to be small or large
			MenuItem small = new MenuItem("Small"); //if the user selects this menu item, the size of the text in the game will be small 
			MenuItem large = new MenuItem("Large"); //if the user selects this menu item, the size of the text in the game will be large 
			font.getItems().addAll(small, large); //adding menu items small and large to the menu item named "font"
			
			Menu theme = new Menu("Theme"); //creating a new menu inside the "View" menu where the user will choose whether he/she wants the text displayed in the game to be red, blue, or black
			MenuItem red = new MenuItem("Red"); 
			MenuItem blue = new MenuItem("Blue");
			MenuItem black = new MenuItem("Black");
			theme.getItems().addAll(red, blue, black); //adding menu items red, blue, and black to the menu item named "theme"
			view.getItems().addAll(font, theme); //adding the menus named font and theme to the menu named "view"

			MenuBar menubar = new MenuBar(options, view); //creating a menu bar which will have the menus "options" and "view"

			Text txt1 = new Text("Welcome to the math quiz game, please enter your name");
			//the previous line is a code which creates a new object of class "Text", which displays a message telling the user to enter his/her name in the text field 
			TextField userTextFields = new TextField(); //code to create a new text field where the user will enter his/her name
			userTextFields.setPromptText("John Appleseed"); //an example of a name to be entered

			Button start = new Button("Start!"); //code to create a new button, where the user will click on it to start the game, after the user clicks on this button, a message displayed with the user's name along with the instructions of how to play the game
			Text instruction = new Text();
			Text txt2 = new Text("Choose the right answer");

			start.setOnAction(actionEvent -> {
				String name = String.valueOf(userTextFields.getText());  //code that takes the user name as an input, stores it in the variable name, and prints it along with the text that explains to the user how to play the game 
				instruction.setText("Welcome " + name + ". In this game, you will be presented with an equation where you have to select the correct answer to solve the equation. For example, If you'll be presented with the question: Solve ax = b, you will be presented with four options for the answer.");
			//the code in the previous line displays the game instructions
			});	

			Text txt3 = new Text("What is the solution to " + a + "x = " + b + "?"); //code that prints the equation ax=b, showing the values of a and b to the user and hiding the value x
			Button submit = new Button("Submit the answer"); //the user will click on this button, after clicking on it, a message will be displayed him/her is the answer chosen is right or wrong

			//code that creates the four choices (since the question is a MCQ)
			RadioButton answer1, answer2, answer3, answer4; //creating four new radio buttons with named answer1, answer2, answer3, and answer4

			answer1 = new RadioButton(ans1 + "."); //radio button that has "ans1", the randomly generated integer, which is an incorrect answer
			answer2 = new RadioButton(ans2 + "."); //radio button that has "ans2", the randomly generated integer, which is an incorrect answer
			answer3 = new RadioButton(ans3 + "."); //radio button that has "ans3", the randomly generated integer, which is an incorrect answer
			answer4 = new RadioButton(x + "."); //radio button that has the right answer (the actual value of x)

			ToggleGroup group = new ToggleGroup(); //creating a new object of class "ToggleGroup"

			//setting the toggling settings for the radio buttons
			answer1.setToggleGroup(group);
			answer2.setToggleGroup(group);
			answer3.setToggleGroup(group);
			answer4.setToggleGroup(group);

			Text txt4 = new Text();

			submit.setOnAction(e -> {
				String name = String.valueOf(userTextFields.getText()); 
				//if the fourth choice is chosen, then a message will be displayed along with the user name telling him/her that he/she chose the right answer
				if (answer4.isSelected()) {
					txt4.setText("Congratualations " + name + "! You guessed right!");
				//if the user chose the other three choices, a message will be displayed along with the user name telling him/her that he chose a wrong answer
				} else {
					txt4.setText("Wrong answer " + name + "! Try again");
				}
			});	

			//Actions for the Options menu items
			newGame.setOnAction(e -> {
				// code that generates the values of a, x , b and the incorrect answer options randomly, resets the radio buttons settings, clear the text and the text field
				a = (int)(Math.random()*11);
				x = (int)(Math.random()*11);
				b = a * x;
				ans1 = (int)(Math.random()*11);
				ans2 = (int)(Math.random()*11);
				ans3 = (int)(Math.random()*11);
				userTextFields.clear();
				answer1.setSelected(false);
				answer2.setSelected(false);
				answer3.setSelected(false);
				answer4.setSelected(false);
				txt3.setText("What is the solution to " + a + "x = " + b + "?");
				txt4.setText(null);
				instruction.setText(null);
				answer1.setText(ans1 + ".");
				answer2.setText(ans2 + ".");
				answer3.setText(ans3 + ".");
				answer4.setText(x + ".");
			});	

			advanced.setOnAction(e -> {
				a = r.nextInt(great-less) + less;
				x = r.nextInt(great-less) + less;
				b = a * x;
				ans1 = r.nextInt(great-less) + less;
				ans2 = r.nextInt(great-less) + less;
				ans3 = r.nextInt(great-less) + less;
				userTextFields.clear();
				answer1.setSelected(false);
				answer2.setSelected(false);
				answer3.setSelected(false);
				answer4.setSelected(false);
				txt3.setText("What is the solution to " + a + "x = " + b + "?");
				txt4.setText(null);
				instruction.setText(null);
				answer1.setText(ans1 + ".");
				answer2.setText(ans2 + ".");
				answer3.setText(ans3 + ".");
				answer4.setText(x + ".");
			});	

			exit.setOnAction(e -> {
				Platform.exit(); //code that exits (closes the window)
			});	

			//Actions for the View menu items
			small.setOnAction(e -> {
				//code to make font size smaller
				txt1.setFont(Font.font(null, null, null, 8));
				start.setFont(Font.font(null, null, null, 8));
				instruction.setFont(Font.font(null, null, null, 8));
				txt2.setFont(Font.font(null, null, null, 8));
				txt3.setFont(Font.font(null, null, null, 8));
				answer1.setFont(Font.font(null, null, null, 8));
				answer2.setFont(Font.font(null, null, null, 8));
				answer3.setFont(Font.font(null, null, null, 8));
				answer4.setFont(Font.font(null, null, null, 8));
				submit.setFont(Font.font(null, null, null, 8));
				txt4.setFont(Font.font(null, null, null, 8));
			});	

			large.setOnAction(e -> {
				//code to make font size bigger
				txt1.setFont(Font.font(null, null, null, 16));
				start.setFont(Font.font(null, null, null, 16));
				instruction.setFont(Font.font(null, null, null, 16));
				txt2.setFont(Font.font(null, null, null, 16));
				txt3.setFont(Font.font(null, null, null, 16));
				answer1.setFont(Font.font(null, null, null, 16));
				answer2.setFont(Font.font(null, null, null, 16));
				answer3.setFont(Font.font(null, null, null, 16));
				answer4.setFont(Font.font(null, null, null, 16));
				submit.setFont(Font.font(null, null, null, 16));
				txt4.setFont(Font.font(null, null, null, 16));
			});	

			red.setOnAction(e -> {
				//code to make theme red
				txt1.setFill(Color.RED);
				start.setTextFill(Color.RED);
				instruction.setFill(Color.RED);
				txt2.setFill(Color.RED);
				txt3.setFill(Color.RED);
				answer1.setTextFill(Color.RED);
				answer2.setTextFill(Color.RED);
				answer3.setTextFill(Color.RED);
				answer4.setTextFill(Color.RED);
				submit.setTextFill(Color.RED);
				txt4.setFill(Color.RED);
			});	

			blue.setOnAction(e -> {
				//code to make theme blue
				txt1.setFill(Color.BLUE);
				start.setTextFill(Color.BLUE);
				instruction.setFill(Color.BLUE);
				txt2.setFill(Color.BLUE);
				txt3.setFill(Color.BLUE);
				answer1.setTextFill(Color.BLUE);
				answer2.setTextFill(Color.BLUE);
				answer3.setTextFill(Color.BLUE);
				answer4.setTextFill(Color.BLUE);
				submit.setTextFill(Color.BLUE);
				txt4.setFill(Color.BLUE);
			});	

			black.setOnAction(e -> {
				//code to make theme black
				txt1.setFill(Color.BLACK);
				start.setTextFill(Color.BLACK);
				instruction.setFill(Color.BLACK);
				txt2.setFill(Color.BLACK);
				txt3.setFill(Color.BLACK);
				answer1.setTextFill(Color.BLACK);
				answer2.setTextFill(Color.BLACK);
				answer3.setTextFill(Color.BLACK);
				answer4.setTextFill(Color.BLACK);
				submit.setTextFill(Color.BLACK);
				txt4.setFill(Color.BLACK);
			});	

			//VBox layout
			VBox game = new VBox();
			game.getChildren().addAll(menubar, txt1, userTextFields, start, instruction, txt2, txt3, answer1, answer2, answer3, answer4, submit, txt4);
			//all of the elements in the previous line are added to the VBox named "game"

			Scene secondGame = new Scene(game, 1400, 300);
			Stage game2 = new Stage();
			game2.setTitle("Math quiz game");
			game2.setScene(secondGame);

			//Menu items for the main menu
			sub1.setOnAction(new EventHandler<ActionEvent>() {
				@Override
				public void handle(ActionEvent e) {
					game1.show(); 
				}
			});

			sub2.setOnAction(new EventHandler<ActionEvent>() {
				@Override
				public void handle(ActionEvent e) {
					game2.show();
				}
			});

			Group root = new Group(menuBar);
			Scene scene = new Scene(root,600,300);
			primaryStage.setScene(scene);
			primaryStage.setTitle("Game Selection"); //setting the title of the first window
			primaryStage.show();
		} catch(Exception e) {
			e.printStackTrace();
		}
	}

	public static void main(String[] args) {
		launch(args);
	}
}
